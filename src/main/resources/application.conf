app {
  # The Akka actor system will bind to this host and port
  # The default can be overwritten using the APP_HOST and APP_PORT env variables
  # Note: Default host is `InetAddress.getLocalHost.getHostAddress`
  host = "127.0.0.1"
  host = ${?APP_HOST}
  port = 0
  port = ${?APP_PORT}

  server_host = "127.0.0.1"
  server_host = ${?SERVER_HOST}
  server_port = 2550
  server_port = ${?SERVER_PORT}

  # A seeds file can optionally be specified using the APP_SEEDS_FILE env variable
  # cluster.seedsFile = ${?APP_SEEDS_FILE}
}

akka {
  loggers = ["akka.event.Logging$DefaultLogger"]
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 10s
  loglevel = "INFO"
  #stdout-loglevel = "DEBUG"
  log-config-on-start = off

  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    # Enable it only for debug purposes
    serialize-messages = on

    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      cfabcaster = "cfabcast.serialization.CFABCastSerializer"
    }

    serialization-bindings {
      "cfabcast.messages.Message" = cfabcaster
      "cfabcast.messages.CFABCastMessage" = cfabcaster
    }

    kryo  {
      type = "graph"
      idstrategy = "incremental"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "lz4,aes"
      encryption {
        aes {
          mode = "AES/CBC/PKCS5Padding"
          key = j68KkRjq21ykRGAQ
          IV-length = 16
        }
      }
      implicit-registration-logging = false
      kryo-trace = false

      kryo-custom-serializer-init = "cfabcast.serialization.CFABCastSerializer"
      resolve-subclasses = false
      mappings {
        "cfabcast.messages.Message" = 20,
        "cfabcast.messages.CFABCastMessage" = 21
      }
      classes = [
        "cfabcast.messages.Message",
        "cfabcast.messages.CFABCastMessage"
      ]
    }
  }

  remote {
    transport = "akka.remote.netty.NettyRemoteTransport"
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${?app.host}
      port = ${?app.port}
    }
  }
}

# Cluster nodes that play Proposers role
contact-points = [
  "akka.tcp://CFABCastSystem@127.0.1.1:2551",
  "akka.tcp://CFABCastSystem@127.0.1.2:2552",
  "akka.tcp://CFABCastSystem@127.0.1.3:2553"
]
